#!/usr/bin/env python3

import requests
import subprocess
import sys
import time
import unittest

class TestActor(unittest.TestCase):

    def setUp(self):
        self.p = subprocess.Popen(args)
        time.sleep(2)

    def tearDown(self):
        self.p.terminate()

    def __request(self, meth, path, **kwargs):
        r = meth('http://localhost:8080/' + path, **kwargs)
        self.assertEqual(r.status_code, 200)

    def __put(self, path, **kwargs):
        self.__request(requests.put, path, **kwargs)

    def __get(self, path, **kwargs):
        self.__request(requests.get, path, **kwargs)

    def __delete(self, path, **kwargs):
        self.__request(requests.delete, path, **kwargs)

    def test_can_create_and_print(self):
        action = {'type': 'print'}
        self.__put('actions/1', json=action)
        self.__get('actions/1')
        self.__delete('actions/1')

    def test_can_create_and_sound(self):
        action = {
            'type': 'sound',
            'sound_file': 'https://www.youtube.com/watch?v=tPEE9ZwTmy0',
        }
        self.__put('actions/1', json=action)
        self.__get('actions/1')
        self.__delete('actions/1')

args = sys.argv[1:]
for _ in sys.argv[1:]:
    del sys.argv[1]
print(' '.join(args))

if __name__ == '__main__':
    unittest.main()
